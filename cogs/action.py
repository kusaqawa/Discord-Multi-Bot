
import disnake
from disnake.enums import ButtonStyle
from disnake.ext import commands
from config import *
import asyncio
import datetime
import time

from typing import List

import sqlite3

test_guild = [1234567890987654321]


connection = sqlite3.connect("mod.db") 
cursor = connection.cursor()

class BackSecurity(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()     

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Security(self.client, self.inter, self.member))
        return    

class BackControl(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()     

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Control(self.client, self.inter, self.member))
        return    

class BackAdmin(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))
        return    

class BackCreative(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Creative(self.client, self.inter, self.member))
        return    

class CreativeRole(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)

        self.inter = inter
        self.member = member
        self.client = client

        global music
        global club
        global painter

        music = disnake.utils.get(self.inter.guild.roles, id=MUSIC)
        club = disnake.utils.get(self.inter.guild.roles, id=CLUB)
        painter = disnake.utils.get(self.inter.guild.roles, id=PAINTER)

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="üéµ", style=ButtonStyle.grey)
    async def music(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=MUSIC)  # –†–æ–ª—å –º—É–∑—ã–∫–∞–Ω—Ç–∞
        if role in self.member.roles:
            await self.member.remove_roles(music)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - –ú—É–∑—ã–∫–∞–Ω—Ç', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å **–ú—É–∑—ã–∫–∞–Ω—Ç**, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_CREATIVE)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–Ω—è–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –†–æ–ª—å',
                value = '```–ú—É–∑—ã–∫–∞–Ω—Ç```',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(CREATIVE) in interaction.author.roles:  # –†–æ–ª—å –ö—Ä–µ–∞—Ç–∏–∞–≤–∞
                await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
                return
            
        else:
            await self.member.add_roles(music)       
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å –º—É–∑—ã–∫–∞–Ω—Ç–∞ {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_CREATIVE)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É –≤—ã–¥–∞–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –†–æ–ª—å',
                value = '```–ú—É–∑—ã–∫–∞–Ω—Ç```',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(CREATIVE) in interaction.author.roles: # –†–æ–ª—å Creative
                await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
                return

    @disnake.ui.button(label="üìö", style=ButtonStyle.grey)
    async def club(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=CLUB)  # –†–æ–ª—å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫–ª—É–±–∞
        if role in self.member.roles:
            await self.member.remove_roles(club)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å **–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±**, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_CREATIVE)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–Ω—è–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –†–æ–ª—å',
                value = '```–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±```',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(CREATIVE) in interaction.author.roles: # –†–æ–ª—å Creative
                await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
                return
            
        else:
            await self.member.add_roles(music)       
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å **–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±** {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_CREATIVE)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É –≤—ã–¥–∞–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –†–æ–ª—å',
                value = '```–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±```',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
            
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(CREATIVE) in interaction.author.roles: # –†–æ–ª—å Creative
                await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
                return
    
    @disnake.ui.button(label="üé®", style=ButtonStyle.grey)
    async def painterss(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=PAINTER)  # –†–æ–ª—å —Ö—É–¥–æ–∂–Ω–∏–∫–∞
        if role in self.member.roles:
            await self.member.remove_roles(painter)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - –•—É–¥–æ–∂–Ω–∏–∫', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å **–•—É–¥–æ–∂–Ω–∏–∫**, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_CREATIVE)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–Ω—è–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –†–æ–ª—å',
                value = '```–•—É–¥–æ–∂–Ω–∏–∫```',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(CREATIVE) in interaction.author.roles: # –†–æ–ª—å Creative
                await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
                return
            
        else:
            await self.member.add_roles(music)       
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å **–•—É–¥–æ–∂–Ω–∏–∫** {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_CREATIVE)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É –≤—ã–¥–∞–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –†–æ–ª—å',
                value = '```–•—É–¥–æ–∂–Ω–∏–∫```',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)  
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
                
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
        
            elif interaction.guild.get_role(CREATIVE) in interaction.author.roles: # –†–æ–ª—å Creative
                await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
                return

                
    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(CREATIVE) in interaction.author.roles: # –†–æ–ª—å Creative
            await interaction.response.edit_message(embed=embed, view=BackCreative(self.client, self.inter, self.member))
            return


class VerifySupport(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
  
        self.inter = inter
        self.member = member
        self.client = client

        global girl
        global boy
        global declined
        global unveref
        girl = disnake.utils.get(self.inter.guild.roles, id=GIRL)
        boy = disnake.utils.get(self.inter.guild.roles, id=BOY)
        declined = disnake.utils.get(self.inter.guild.roles, id=DECLINED)
        unveref = disnake.utils.get(self.inter.guild.roles, id=UNVEREF)


    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(emoji="‚ôÄÔ∏è", style=ButtonStyle.grey)
    async def girl(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await self.member.remove_roles(boy)
        await self.member.remove_roles(declined)
        await self.member.remove_roles(unveref)

        await self.member.add_roles(girl)

        
        cursor.execute("UPDATE users SET verify=verify +1 WHERE id=?", [interaction.author.id])
        connection.commit()
        embed = disnake.Embed(title='–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', description=f'{self.inter.author.mention}, –í—ã **–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}, –≥–µ–Ω–¥–µ—Ä {girl.mention}', color=0x2f3136)
        embed.set_thumbnail(url=self.member.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)
        channel = self.client.get_channel(LOG_VERIFY)
        embed_log = disnake.Embed(
            title = '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', color=0x2f3136
        )
        embed_log.add_field(
            name = '> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª:',
            value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
            inline=False
        )
        embed_log.add_field(
            name = '> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:',
            value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
            inline=False
        )
        embed_log.add_field(
            name = '> –ì–µ–Ω–¥–µ—Ä',
            value = '```–ñ–µ–Ω—Å–∫–∏–π```',
            inline=False
        )
        embed_log.set_thumbnail(url=interaction.author.display_avatar)  
        embed_log.timestamp = datetime.datetime.now()
        await channel.send(embed=embed_log)

    @disnake.ui.button(emoji="‚ôÇÔ∏è", style=ButtonStyle.grey)
    async def boy(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await self.member.remove_roles(girl)
        await self.member.remove_roles(declined)
        await self.member.remove_roles(unveref)

        await self.member.add_roles(boy)

        cursor.execute("UPDATE users SET verify=verify +1 WHERE id=?", [interaction.author.id])
        connection.commit()
        embed = disnake.Embed(title='–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', description=f'{self.inter.author.mention}, –í—ã **–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}, –≥–µ–Ω–¥–µ—Ä {boy.mention}', color=0x2f3136)
        embed.set_thumbnail(url=self.member.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)
        channel = self.client.get_channel(LOG_VERIFY)
        embed_log = disnake.Embed(
            title = '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', color=0x2f3136
        )
        embed_log.add_field(
            name = '> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª:',
            value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
            inline=False
        )
        embed_log.add_field(
            name = '> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:',
            value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
            inline=False
        )
        embed_log.add_field(
            name = '> –ì–µ–Ω–¥–µ—Ä',
            value = '```–ú—É–∂—Å–∫–æ–π```',
            inline=False
        )
        embed_log.set_thumbnail(url=interaction.author.display_avatar)  
        embed_log.timestamp = datetime.datetime.now()
        await channel.send(embed=embed_log)

    @disnake.ui.button(label="–ù–µ –¥–æ–ø—É—â–µ–Ω", style=ButtonStyle.grey)
    async def declined(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await self.member.remove_roles(girl)
        await self.member.remove_roles(boy)
        await self.member.remove_roles(unveref)

        await self.member.add_roles(declined)

        embed = disnake.Embed(title='–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', description=f'{self.inter.author.mention}, –í—ã **–∏–∑–º–µ–Ω–∏–ª–∏** —Ä–æ–ª–∏ {self.member.mention} –Ω–∞ {declined.mention}', color=0x2f3136)
        embed.set_thumbnail(url=self.member.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)
        embed_done = disnake.Embed(
            title = '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è',
            description = f'{self.member.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–µ–¥–æ–ø—É—Å–∫ –æ—Ç {self.inter.author.mention}',
            color = 0x2f3136
        )
        await self.member.mention.send(embed = embed_done)
        channel = self.client.get_channel(LOG_VERIFY)
        embed_log = disnake.Embed(
            title = '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', color=0x2f3136
        )
        embed_log.add_field(
            name = '> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª:',
            value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
            inline=False
        )
        embed_log.add_field(
            name = '> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:',
            value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
            inline=False
        )
        embed_log.add_field(
            name = '> –ì–µ–Ω–¥–µ—Ä',
            value = '```–Ω–µ–¥–æ–ø—É—Å–∫```',
            inline=False
        )  
        embed_log.set_thumbnail(url=interaction.author.display_avatar)  
        embed_log.timestamp = datetime.datetime.now()
        await channel.send(embed=embed_log)
        
    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, member, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
            await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:  # –†–æ–ª—å SECURITY
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            return 
        
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            await interaction.response.edit_message(embed=embed, view=Curator(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(SUPPORT) in interaction.author.roles: # –†–æ–ª—å SUPPORT
            await interaction.response.edit_message(embed=embed, view=Support(self.client, self.inter, self.member))
            return


class Staff(disnake.ui.View):
    def __init__(self, inter, client, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

        global moderator
        global support
        global closemaker
        global security
        global clanmaster
        global broadcaster
        global eventer
        global vigovor
        global vigovors
        global otpysk
        global otpysks
        global staff
        global curator
        global creative
        global media
        global helper
        moderator = disnake.utils.get(self.inter.guild.roles, id=MODER)
        curator = disnake.utils.get(self.inter.guild.roles, id=CURATOR)
        security = disnake.utils.get(self.inter.guild.roles, id=SECURITY)
        support = disnake.utils.get(self.inter.guild.roles, id=SUPPORT)
        creative = disnake.utils.get(self.inter.guild.roles, id=CREATIVE)
        helper = disnake.utils.get(self.inter.guild.roles, id=HELPER)
        media = disnake.utils.get(self.inter.guild.roles, id=MEDIA)
        broadcaster = disnake.utils.get(self.inter.guild.roles, id=BROADCASTER)
        closemaker = disnake.utils.get(self.inter.guild.roles, id=CLOSEMAKER)
        eventer = disnake.utils.get(self.inter.guild.roles, id=EVENTER)
        staff = disnake.utils.get(self.inter.guild.roles, id=STAFF_ROLE)
    
            
        curators = {self.inter.guild.get_role(ADMIN), self.inter.guild.get_role(1119326953804152922)} #–ê–ô–î–ò –ê–î–ú–ò–ù–ê

        if not curators.intersection(self.inter.author.roles):
            self.curator.disabled = True
            self.security.disabled = True
            



    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()
            
    @disnake.ui.button(label="Curator", style=ButtonStyle.gray)
    async def curator(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=CURATOR)  # –†–û–õ–¨ Curator
        if role in self.member.roles:
            await self.member.remove_roles(role)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Curator', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Curator, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Curator', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Curator```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            role = disnake.utils.get(self.inter.guild.roles, id=CURATOR)  # –†–û–õ–¨ Curator
            await self.member.add_roles(role)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Curator', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Curator, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Curator', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Curator```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

    @disnake.ui.button(label="Master", style=ButtonStyle.gray)
    async def security(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=SECURITY)  # –†–û–õ–¨ Curator
        if role in self.member.roles:
            await self.member.remove_roles(role)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Master', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Master, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Master', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Master```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            role = disnake.utils.get(self.inter.guild.roles, id=SECURITY)  # –†–û–õ–¨ Curator
            await self.member.add_roles(role)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Master', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Master, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Master', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Master```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
                
    @disnake.ui.button(label="Moderator", style=ButtonStyle.gray)
    async def moderator(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=MODER)  # –†–û–õ–¨ Moderator–ê
        if role in self.member.roles:
            await self.member.remove_roles(moderator)           
            await self.member.remove_roles(staff)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Moderator', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Moderator, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Moderator', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Moderator```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # SECURITY
               await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))           
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))

        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))      
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            await self.member.add_roles(moderator)
            await self.member.add_roles(staff)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Moderator', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Moderator, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Moderator', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Moderator```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        
    @disnake.ui.button(label="Trubinemod", style=ButtonStyle.gray)
    async def broadcaster(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BROADCASTER)  # –†–û–õ–¨ –ë–†–û–ê–î–ö–ê–°–¢–ï–†–ê
        if role in self.member.roles:
            await self.member.remove_roles(broadcaster)           
            await self.member.remove_roles(staff)   
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Trubinemod', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Trubinemod, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Trubinemod', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Trubinemod```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))      
        
        else:
            await self.member.add_roles(broadcaster)
            await self.member.add_roles(staff)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Trubinemod', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Trubinemod, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Trubinemod', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Trubinemod```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

    @disnake.ui.button(label="Closemod", style=ButtonStyle.gray)
    async def clanmaster(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=CLOSEMAKER)  # –†–û–õ–¨ –ö–õ–ê–ù –ú–ê–°–¢–ï–†–ê
        if role in self.member.roles:
            await self.member.remove_roles(role)           
            await self.member.remove_roles(staff)
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Closemod', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Closemod, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Closemod', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Closemod```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            await self.member.add_roles(closemaker)
            await self.member.add_roles(staff)
            
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Closemod', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Closemod, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Closemod', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Closemod```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

    @disnake.ui.button(label="Eventsmod", style=ButtonStyle.gray)
    async def eventers(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=EVENTER)  # –†–û–õ–¨ EVENTER
        if role in self.member.roles:
            await self.member.remove_roles(staff)   
            await self.member.remove_roles(eventer)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Eventsmod', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Eventsmod, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Eventsmod', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Eventsmod```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
       
        else:
            await self.member.add_roles(eventer)
            await self.member.add_roles(staff)
            
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Eventsmod', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Eventsmod, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Eventsmod', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Eventsmod```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
    @disnake.ui.button(label="Creative", style=ButtonStyle.gray)
    async def creat(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=CREATIVE)  # –†–û–õ–¨ CREATIVE
        if role in self.member.roles:
            await self.member.remove_roles(staff)   
            await self.member.remove_roles(creative)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Creative', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Creative, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = 'C–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Creative', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Creative```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            await self.member.add_roles(creative)
            await self.member.add_roles(staff)
            
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Creative', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Creative, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Creative', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Creative```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

    @disnake.ui.button(label="Helper", style=ButtonStyle.grey)
    async def Helper(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=HELPER)  # –†–û–õ–¨ Helper
        if role in self.member.roles:
            await self.member.remove_roles(staff)   
            await self.member.remove_roles(role)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Helper', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Helper, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Helper', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Helper```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))       
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            helper = disnake.utils.get(self.inter.guild.roles, id=HELPER)
            await self.member.add_roles(helper)
            await self.member.add_roles(staff)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Helper', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Helper, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é  {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Helper', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Helper```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
    @disnake.ui.button(label="Media", style=ButtonStyle.grey)
    async def Media(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=MEDIA)  # –†–û–õ–¨ MEDIA
        if role in self.member.roles:
            await self.member.remove_roles(staff)   
            await self.member.remove_roles(media)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Media', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Media, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Media', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –°–Ω—è–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Media```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))      
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            await self.member.add_roles(media)
            await self.member.add_roles(staff)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Media', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Media, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é  {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Media', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Media```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))        
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

    @disnake.ui.button(label="Support", style=ButtonStyle.grey)
    async def support(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=SUPPORT)  # –†–û–õ–¨ –°–ê–ü–ü–û–†–¢–ê
        if role in self.member.roles:
            await self.member.remove_roles(staff)   
            await self.member.remove_roles(support)           
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Support', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** —Ä–æ–ª—å Support, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ - Support', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Support```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        
        elif cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤–µ—Ç–∫–∏', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –µ–º—É –≤–µ—Ç–∫—É.', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))       
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
        else:
            await self.member.add_roles(support)
            await self.member.add_roles(staff)

            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Support', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏** —Ä–æ–ª—å Support, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é  {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            channel = self.client.get_channel(LOG_VETOK)
            embed_log = disnake.Embed(
                title = '–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ - Support', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í—ã–¥–∞–ª–∏:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –í–µ—Ç–∫–∞',
                value = '```Support```',
                inline=False
            )  
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # BackSecurity
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                
                
        
    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.blurple)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if interaction.guild.get_role(CURATOR) in interaction.author.roles: #CURATOR –†–û–õ–¨
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Curator(self.client, self.inter, self.member))
        
        elif interaction.guild.get_role(ADMIN) in interaction.author.roles: #ADMIN –†–û–õ–¨
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))    
        
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles: #ADMIN –†–û–õ–¨
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member)) 


class Razmut(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç", style=ButtonStyle.green)
    async def unmutetext(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):          
        cmute = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
        await self.member.remove_roles(cmute)       
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã —Ä–∞–∑–º—É—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if interaction.guild.get_role(CURATOR) in interaction.author.roles:    # CURATOR
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles: #SECURITY
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        else:
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
                
            
    @disnake.ui.button(label="–ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç", style=ButtonStyle.green)
    async def gmutss(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):        
        vmute = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)
        await self.member.remove_roles(vmute)  
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã —Ä–∞–∑–º—É—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if interaction.guild.get_role(CURATOR) in interaction.author.roles: # CURATOR
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles: #SECURITY
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        else:
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        

class BackSupport(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Support(self.client, self.inter, self.member))
        return

class Back(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Moderations(self.client, self.inter, self.member))
        return

class BackAdmin(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))
        return    
    
class BackCurator(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Curator(self.client, self.inter, self.member))
        return    

class Gender(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)

        self.inter = inter
        self.member = member
        self.client = client

        global girl
        global boy
        girl = disnake.utils.get(self.inter.guild.roles, id=GIRL)
        boy = disnake.utils.get(self.inter.guild.roles, id=BOY)

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–î–µ–≤–æ—á–∫–∞", style=ButtonStyle.blurple)
    async def girl(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await self.member.remove_roles(boy)

        await self.member.add_roles(girl)
        
        embed = disnake.Embed(title='–°–º–µ–Ω–∞ –ø–æ–ª–∞', description=f'{self.inter.author.mention}, –í—ã **–∏–∑–º–µ–Ω–∏–ª–∏** –ø–æ–ª {self.member.mention} –Ω–∞ {girl.mention}', color=0x2f3136)
        embed.set_thumbnail(url=self.member.display_avatar)
        embed.timestamp = datetime.datetime.now()

        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å Admin
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
 
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å SECURITY
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
                    
        elif interaction.guild.get_role(MODER) in interaction.author.roles:    # –†–æ–ª—å Moderator–∞
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            
        elif interaction.guild.get_role(HELPER) in interaction.author.roles:    # –†–æ–ª—å Control
            await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            

    @disnake.ui.button(label="–ú–∞–ª—å—á–∏–∫", style=ButtonStyle.blurple)
    async def boy(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await self.member.remove_roles(girl)

        await self.member.add_roles(boy)
        embed = disnake.Embed(title='–°–º–µ–Ω–∞ –ø–æ–ª–∞', description=f'{self.inter.author.mention}, –í—ã **–∏–∑–º–µ–Ω–∏–ª–∏** –ø–æ–ª {self.member.mention} –Ω–∞ {boy.mention}', color=0x2f3136)
        embed.set_thumbnail(url=self.member.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å Admin
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
         
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å SECURITY
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
                    
        elif interaction.guild.get_role(MODER) in interaction.author.roles:    # –†–æ–ª—å Moderator–∞
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            
        elif interaction.guild.get_role(HELPER) in interaction.author.roles:    # –†–æ–ª—å Control
            await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_SMENA_POLA)
            embed_log = disnake.Embed(
                title = '–°–º–µ–Ω–∞ –ø–æ–ª–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –°–º–µ–Ω–∏–ª –ø–æ–ª:',
                value = f'„Éª{self.inter.author.mention}\n„Éª{self.inter.author.name}\n„Éª{self.inter.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ö–æ–º—É —Å–º–µ–Ω–∏–ª:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member.name}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ø–æ–ª',
                value = '„Éª–ñ–µ–Ω—Å–∫–∏–π',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)  
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
        
    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.gray, row=3)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
        embed.set_thumbnail(url=self.inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å admin
            await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))
            return
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å SECURITY
            await interaction.response.edit_message(embed=embed, view=Security(self.client, self.inter, self.member))
            return
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            await interaction.response.edit_message(embed=embed, view=Curator(self.client, self.inter, self.member))
            return
        elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å MODERA
            await interaction.response.edit_message(embed=embed, view=Moderations(self.client, self.inter, self.member))
            return
        elif interaction.guild.get_role(HELPER) in interaction.author.roles: # –†–æ–ª—å Control
            await interaction.response.edit_message(embed=embed, view=Control(self.client, self.inter, self.member))
            return

class Mute(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member
        
        global moderator
        global support
        moderator = disnake.utils.get(self.inter.guild.roles, id=MODER)
        support = disnake.utils.get(self.inter.guild.roles, id=SUPPORT)

        voiced = {self.inter.guild.get_role(MODER), self.inter.guild.get_role(CURATOR), self.inter.guild.get_role(ADMIN), self.inter.guild.get_role(SECURITY)} #–ê–ô–î–î–ò –ö–£–†–ê–¢–û–†–ê –ò –ú–û–î–ï–†–ê –ò –ê–î–î–ú–ò–ù–ê

        if not voiced.intersection(self.inter.author.roles):
            self.voice.disabled = True
            
    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç", style=ButtonStyle.green)
    async def chat(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):        
        role = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)                
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –º—É—Ç', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å security
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member)) 
                
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            
            elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å Modera
                await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
                
            elif interaction.guild.get_role(HELPER) in interaction.author.roles: # –†–æ–ª—å Control
                await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET mutes=mutes +1 WHERE id=?", [self.member.id])
                        cursor.execute("UPDATE users SET mutes=mutes +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', reason, interaction.author.id])
                        connection.commit()
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –í—ã **–∑–∞–º—É—Ç–∏–ª–∏** {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å security
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member)) 
                            
                        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å Modera
                            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                            
                        elif interaction.guild.get_role(HELPER) in interaction.author.roles: # –†–æ–ª—å Control
                            await interaction.edit_original_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ú—É—Ç', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –í—ã–¥–∞–ª:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –¢–∏–ø:',
                            value = f'„Éª–¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Hakone', color=0x2f3136)
                            embed.add_field(
                                name=f'> –í—ã–¥–∞–ª:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –¢–∏–ø:',
                                value=f'„Éª–¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass

                        warn = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
                        await self.member.remove_roles(warn)

                        role = disnake.utils.get(self.member.guild.roles, id=TEXT_MUTE)
                        await self.member.add_roles(role)
                        await asyncio.sleep(times)
                        await self.member.remove_roles(role)

                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å security
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member)) 
                            
                        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å Modera
                            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                            
                        elif interaction.guild.get_role(HELPER) in interaction.author.roles: # –†–æ–ª—å Control
                            await interaction.edit_original_message(embed=embed, view=BackControl(self.client, self.inter, self.member))

    @disnake.ui.button(label="–ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç", style=ButtonStyle.green)
    async def voice(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)                    
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –º—É—Ç', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                
            elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å security
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member)) 
            
            elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            
            elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å Modera
                await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
                
            elif interaction.guild.get_role(HELPER) in interaction.author.roles: # –†–æ–ª—å Control
                await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET mutes=mutes +1 WHERE id=?", [self.member.id])
                        cursor.execute("UPDATE users SET mutes=mutes +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–¢–µ–∫—Å—Ç–æ–≤–æ–π –º—É—Ç', reason, interaction.author.id])
                        connection.commit()

                        
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –í—ã **–∑–∞–º—É—Ç–∏–ª–∏** {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                            
                        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å security
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member)) 
                            
                        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å Modera
                            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))

                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ú—É—Ç', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –í—ã–¥–∞–ª:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –¢–∏–ø:',
                            value = f'„Éª–ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ tokame', color=0x2f3136)
                            embed.add_field(
                                name=f'> –í—ã–¥–∞–ª:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –¢–∏–ø:',
                                value=f'„Éª–ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)
                        
                        except disnake.Forbidden:
                            pass

                        warn = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)
                        await self.member.remove_roles(warn)

                        role = disnake.utils.get(self.member.guild.roles, id=VOICE_MUTE)
                        await self.member.add_roles(role)
                        await self.member.move_to(None)
                        await asyncio.sleep(times)
                        await self.member.remove_roles(role)

                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–π –º—É—Ç', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        if interaction.guild.get_role(ADMIN) in interaction.author.roles:    # –†–æ–ª—å ADMIN
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(SECURITY) in interaction.author.roles:    # –†–æ–ª—å security
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member)) 
                            
                        elif interaction.guild.get_role(CURATOR) in interaction.author.roles:    # –†–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        
                        elif interaction.guild.get_role(MODER) in interaction.author.roles: # –†–æ–ª—å Modera
                            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                            
                        elif interaction.guild.get_role(HELPER) in interaction.author.roles: # –†–æ–ª—å Control
                            await interaction.edit_original_message(embed=embed, view=BackControl(self.client, self.inter, self.member))

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.blurple)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if interaction.guild.get_role(ADMIN) in interaction.author.roles: #—Ä–æ–ª—å admina
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))
         
        elif interaction.guild.get_role(SECURITY) in interaction.author.roles: #—Ä–æ–ª—å security
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Security(self.client, self.inter, self.member))
            
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles: #—Ä–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Curator(self.client, self.inter, self.member))
        
        elif interaction.guild.get_role(HELPER) in interaction.author.roles: #—Ä–æ–ª—å control
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Control(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(MODER) in interaction.author.roles: #—Ä–æ–ª—å modera
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Moderations(self.client, self.inter, self.member))
            return
            
 

class Moderations(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member
        
        self.verifyzalupa.disabled = True
        self.creativerole.disabled = True

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)                
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –±–∞–Ω', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))   
        
        elif self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
            
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            
                            cursor.execute("UPDATE users SET bans=bans+1 WHERE id=?", [self.member.id])
                            cursor.execute("UPDATE users SET bans=bans +1 WHERE id=?", [interaction.author.id])
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['ban', self.member.id])
                            cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω', reason, interaction.author.id])
                            connection.commit()
    
                            
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –í—ã **–∑–∞–±–∞–Ω–∏–ª–∏** {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))

                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –ë–∞–Ω', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –í—ã–¥–∞–ª:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –¢–∏–ø:',
                                value = f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed = embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ tokame', color=0x2f3136)
                                
                                embed.add_field(
                                    name=f'> –í—ã–¥–∞–ª:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –¢–∏–ø:',
                                    value=f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )

                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass


                            await self.member.edit(roles=[])
                            role = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
                            await self.member.add_roles(role)
                            
                            await asyncio.sleep(times)
                            await self.member.remove_roles(role)
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
                            connection.commit()

                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
            connection.commit()

            local_ban = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(local_ban)

            embed1 = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–±–∞–Ω', description=f'{interaction.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ **—Å–Ω—è–ª–∏** –±–∞–Ω —É {self.member.mention}!', color=0x2f3136)
            embed1.timestamp = datetime.datetime.now()
            embed1.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed1, view=Back(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –†–∞–∑–±–∞–Ω–∏—Ç—å', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –±–∞–Ω', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)                            
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –±–∞–Ω–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
            
         
        
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):       
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))     
        
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ú—É—Ç', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Mute(self.client, self.inter, self.member))


    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)
        chats = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
            
        elif chats in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
        
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –º—É—Ç–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
            
    @disnake.ui.button(label="C–º–µ–Ω–∏—Ç—å –ø–æ–ª", style=ButtonStyle.gray)
    async def gendera(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî C–º–µ–Ω–∏—Ç—å –ø–æ–ª', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–ø–æ–ª** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Gender(self.client, self.inter, self.member))        
        
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –∑–∞–º–µ—á–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        role = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} **—É–∂–µ –µ—Å—Ç—å** –∑–∞–º–µ—á–∞–Ω–∏–µ!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–∑–∞–º–µ—á–∞–Ω–∏–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.add_roles(zames)
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –∑–∞–º–µ—á–∞–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            
            await asyncio.sleep(3600)
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.remove_roles(zames)
    
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å", style=ButtonStyle.blurple)
    async def creativerole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
    
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray)
    async def verifyzalupa(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass

            
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
       
        if  cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -2 WHERE id=?", [self.member.id])
            connection.commit()
            await self.member.edit(roles=[])
            ban_role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(ban_role)
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª **3** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –ø–æ–ª—É—á–∏–ª –±–∞–Ω.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
        
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [self.member.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', reason, interaction.author.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                        return
                        

    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray, row=3)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))  
                                
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id])
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id]) 
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)       
                
    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=3)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        mutes = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        bans = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        
        rows = cursor.execute("SELECT date, punish_view, reason, given FROM history WHERE id = ?", [self.member.id])

        embeds = []
        if mutes+bans+warn == 0:
            embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, –Ω–µ –ø–æ–ª—É—á–∞–ª –Ω–∞—Ä—É—à–µ–Ω–∏–π!', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embeds.append(embed)

        else:
            for i, row in enumerate(rows):
                if i % 5 == 0:
                    embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ú—É—Ç–æ–≤: **{mutes}** –ë–∞–Ω–æ–≤: **{bans}** –ü—Ä–µ–¥–æ–≤: **{warn}**', color=0x2f3136)
                    embed.set_thumbnail(url=self.member.display_avatar)
                    embeds.append(embed)

                embed.add_field(
                    name=f'** **',
                    value=f'`{i+1}.` [<t:{row[0]}:f>] **{row[1]}** *–ü—Ä–∏—á–∏–Ω–∞:* {row[2]}\nModerator–∞—Ç–æ—Ä: <@{row[3]}>',
                    inline=False
                )

        await interaction.response.edit_message(embed=embeds[0], view=Menu(self.client, self.inter, self.member, embeds))

    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å", style=ButtonStyle.red, row=3)
    async def delete(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()
        
class Control(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member
        
        self.ban.disabled = True
        self.unban.disabled = True
        self.verifyzalupa.disabled = True
        self.creativerole.disabled = True

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ú—É—Ç', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Mute(self.client, self.inter, self.member))

    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        chats = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
            
        elif chats in self.member.roles:    
            chats = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
            await self.member.remove_roles(cmute)     
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –°–Ω—è—Ç—å –º—É—Ç', description=f'{interaction.author.mention}, –í—ã —Ä–∞–∑–º—É—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            
            await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
       
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –º—É—Ç–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackControl(self.client, self.inter, self.member))
            
    @disnake.ui.button(label="C–º–µ–Ω–∏—Ç—å –ø–æ–ª", style=ButtonStyle.gray)
    async def gendera(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî C–º–µ–Ω–∏—Ç—å –ø–æ–ª', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–ø–æ–ª** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Gender(self.client, self.inter, self.member))        
        
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –∑–∞–º–µ—á–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        role = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} **—É–∂–µ –µ—Å—Ç—å** –∑–∞–º–µ—á–∞–Ω–∏–µ!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–∑–∞–º–µ—á–∞–Ω–∏–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.add_roles(zames)
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –∑–∞–º–µ—á–∞–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            
            await asyncio.sleep(3600)
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.remove_roles(zames)
    
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å", style=ButtonStyle.blurple)
    async def creativerole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
    
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray)
    async def verifyzalupa(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass

            
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
       
        if  cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -2 WHERE id=?", [self.member.id])
            connection.commit()
            await self.member.edit(roles=[])
            ban_role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(ban_role)
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª **3** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –ø–æ–ª—É—á–∏–ª –±–∞–Ω.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
        
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [self.member.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', reason, interaction.author.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=Back(self.client, self.inter, self.member))
                        return
                        

    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray, row=3)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))  
                                
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id])
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id]) 
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)       
                
    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=3)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        mutes = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        bans = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        
        rows = cursor.execute("SELECT date, punish_view, reason, given FROM history WHERE id = ?", [self.member.id])

        embeds = []
        if mutes+bans+warn == 0:
            embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, –Ω–µ –ø–æ–ª—É—á–∞–ª –Ω–∞—Ä—É—à–µ–Ω–∏–π!', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embeds.append(embed)

        else:
            for i, row in enumerate(rows):
                if i % 5 == 0:
                    embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ú—É—Ç–æ–≤: **{mutes}** –ë–∞–Ω–æ–≤: **{bans}** –ü—Ä–µ–¥–æ–≤: **{warn}**', color=0x2f3136)
                    embed.set_thumbnail(url=self.member.display_avatar)
                    embeds.append(embed)

                embed.add_field(
                    name=f'** **',
                    value=f'`{i+1}.` [<t:{row[0]}:f>] **{row[1]}** *–ü—Ä–∏—á–∏–Ω–∞:* {row[2]}\nModerator–∞—Ç–æ—Ä: <@{row[3]}>',
                    inline=False
                )

        await interaction.response.edit_message(embed=embeds[0], view=Menu(self.client, self.inter, self.member, embeds))

    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å", style=ButtonStyle.red, row=3)
    async def delete(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()        
        
        
class Support(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

        self.ban.disabled = True
        self.unban.disabled = True
        self.mute.disabled = True
        self.unmute.disabled = True
        self.warn.disabled = True
        self.unwarn.disabled = True
        self.genders.disabled = True
        self.history.disabled = True

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass


    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
        
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
   
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray)
    async def verifygender(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSupport(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≥–µ–Ω–¥–µ—Ä–Ω—É—é —Ä–æ–ª—å** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=VerifySupport(self.client, self.inter, self.member))        

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
    
    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass

    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=3)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass

    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å", style=ButtonStyle.red, row=3)
    async def deleted(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()        
        
class Creative(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

        self.ban.disabled = True
        self.unban.disabled = True
        self.mute.disabled = True
        self.unmute.disabled = True
        self.warn.disabled = True
        self.unwarn.disabled = True
        self.genders.disabled = True
        self.verifygender.disabled = True
        self.history.disabled = True

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray, row=1)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray, row=1)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray, row=1)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass


    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray, row=1)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
        
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray, row=1)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
   
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray, row=2)
    async def verifygender(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
    
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å", style=ButtonStyle.blurple, row=2)
    async def creativerole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSupport(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª—å—é** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=CreativeRole(self.client, self.inter, self.member))        
    

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray, row=2)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass
    
    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray, row=3)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass

    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=3)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        pass

    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å", style=ButtonStyle.red, row=3)
    async def deleted(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()                

class Admin(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)                
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –±–∞–Ω', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))   
        
        elif self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            
                            cursor.execute("UPDATE users SET bans=bans+1 WHERE id=?", [self.member.id])
                            cursor.execute("UPDATE users SET bans=bans +1 WHERE id=?", [interaction.author.id])
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['ban', self.member.id])
                            cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω', reason, interaction.author.id])
                            connection.commit()
    
                            
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –í—ã **–∑–∞–±–∞–Ω–∏–ª–∏** {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))

                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –ë–∞–Ω', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –í—ã–¥–∞–ª:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –¢–∏–ø:',
                                value = f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed = embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ tokame', color=0x2f3136)
                                
                                embed.add_field(
                                    name=f'> –í—ã–¥–∞–ª:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –¢–∏–ø:',
                                    value=f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )

                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass

                            await self.member.edit(roles=[])
                            role = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
                            await self.member.add_roles(role)
                            await asyncio.sleep(times)
                            await self.member.remove_roles(role)
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
                            connection.commit()

                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
            connection.commit()

            local_ban = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(local_ban)

            embed1 = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–±–∞–Ω', description=f'{interaction.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ **—Å–Ω—è–ª–∏** –±–∞–Ω —É {self.member.mention}!', color=0x2f3136)
            embed1.timestamp = datetime.datetime.now()
            embed1.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed1, view=BackAdmin(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –†–∞–∑–±–∞–Ω–∏—Ç—å', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –±–∞–Ω', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)                            
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –±–∞–Ω–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ú—É—Ç', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Mute(self.client, self.inter, self.member))


    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)
        chats = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
            
        elif chats in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
        
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –º—É—Ç–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))

   
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –∑–∞–º–µ—á–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        role = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} **—É–∂–µ –µ—Å—Ç—å** –∑–∞–º–µ—á–∞–Ω–∏–µ!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–∑–∞–º–µ—á–∞–Ω–∏–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                    return
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.add_roles(zames)
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –∑–∞–º–µ—á–∞–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            
            await asyncio.sleep(3600)
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.remove_roles(zames)    
        
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray)
    async def verifygender(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≥–µ–Ω–¥–µ—Ä–Ω—É—é —Ä–æ–ª—å** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=VerifySupport(self.client, self.inter, self.member))
                    
    @disnake.ui.button(label="–°–º–µ–Ω–∏—Ç—å –ø–æ–ª", style=ButtonStyle.gray)
    async def genderole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî C–º–µ–Ω–∏—Ç—å –ø–æ–ª', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–ø–æ–ª** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Gender(self.client, self.inter, self.member))                    
                    
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
       
        if  cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -2 WHERE id=?", [self.member.id])
            connection.commit()
            await self.member.edit(roles=[])
            ban_role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(ban_role)
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª **3** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –ø–æ–ª—É—á–∏–ª –±–∞–Ω.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
        
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [self.member.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', reason, interaction.author.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        return
                        

    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))  
                                
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id])
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id]) 
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –≤—ã–≥–æ–≤–æ—Ä", style=ButtonStyle.gray, row=2)
    async def vigovor(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –≤—ã–≥–æ–≤–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        
        if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET vigovor=vigovor -2 WHERE id=?", [self.member.id])
            connection.commit()
            curator = disnake.utils.get(self.inter.guild.roles, id=CURATOR)
            moderator = disnake.utils.get(self.inter.guild.roles, id=MODER)
            support = disnake.utils.get(self.inter.guild.roles, id=SUPPORT)
            broadcaster = disnake.utils.get(self.inter.guild.roles, id=BROADCASTER)
            eventer = disnake.utils.get(self.inter.guild.roles, id=EVENTER)
            creative = disnake.utils.get(self.inter.guild.roles, id=CREATIVE)
            closemaker = disnake.utils.get(self.inter.guild.roles, id=CLOSEMAKER)
            staff = disnake.utils.get(self.inter.guild.roles, id=STAFF_ROLE)
            await self.member.remove_roles(CURATOR)
            await self.member.remove_roles(moderator)
            await self.member.remove_roles(support)
            await self.member.remove_roles(broadcaster)
            await self.member.remove_roles(eventer)
            await self.member.remove_roles(staff)
            await self.member.remove_roles(closemaker)
            await self.member.remove_roles(creative)
            
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏ 3 –≤—ã–≥–æ–≤–æ—Ä** –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} –±—ã–ª —Å–Ω—è—Ç —Å —Ä–æ–ª–µ–π —Å–æ—Å—Ç–∞–≤–∞.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –í—ã–≥–æ–≤–æ—Ä/–°–Ω—è—Ç–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            try:
                embed = disnake.Embed(title='–í–∞—Å —Å–Ω—è–ª–∏ —É –≤–∞—Å 3 –≤—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                )
                embed.add_field(
                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                    value=f'**```{reason}```**',
                    inline=True
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)
            
            except disnake.Forbidden:
                pass

                    
            except UnboundLocalError or ValueError:
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–≤—ã–≥–æ–≤–æ—Ä–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–≤—ã–≥–æ–≤–æ—Ä–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            

                            cursor.execute("UPDATE users SET vigovor=vigovor +1 WHERE id=?", [self.member.id])
                            connection.commit()
    
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –≤—ã–≥–æ–≤–æ—Ä {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))                                                         
                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –í—ã–≥–æ–≤–æ—Ä', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed=embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                                embed.add_field(
                                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed_log.add_field(
                                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )
                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass

                            await asyncio.sleep(times)
                            cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                            connection.commit()
                            
                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞", style=ButtonStyle.gray, row=2)
    async def vigovors(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
                
        if cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤—ã–≥–æ–≤–æ—Ä–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))   
                            
        elif -1 > cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤—ã–≥–æ–≤–æ—Ä–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.send(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
               
        else:
            if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –≤—ã–≥–æ–≤–æ—Ä —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –í—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        
             
            if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
                cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –≤—ã–≥–æ–≤–æ—Ä —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –í—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)         

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –æ—Ç–ø—É—Å–∫", style=ButtonStyle.gray, row=2)
    async def rest(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –æ—Ç–ø—É—Å–∫', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))   
        
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤—ã–¥–∞—á–∏ **–æ—Ç–ø—É—Å–∫—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã–¥–∞–Ω–æ **–æ—Ç–ø—É—Å–∫** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ –¥–Ω—è—Ö: 1d/14d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        

                        cursor.execute("UPDATE users SET otpysk=otpysk +1 WHERE id=?", [self.member.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –æ—Ç–ø—É—Å–∫ {self.member.mention}, –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—É—Å–∫–∞ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))                                                         
                        channel = self.client.get_channel(LOG_OTPYSK)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –û—Ç–ø—É—Å–∫', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ü–æ–ª—É—á–∏–ª –æ—Ç–ø—É—Å–∫:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–ø—É—Å–∫–∞:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—É—Å–∫–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed=embed_log)
                        try:
                            embed = disnake.Embed(title='–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–ø—É—Å–∫', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass

                        role = disnake.utils.get(self.member.guild.roles, id=OTPYSK_ROLE) #—Ä–æ–ª—å –æ—Ç–ø—É—Å–∫–∞
                        await self.member.add_roles(role) 
                        
                        await asyncio.sleep(times)
                        await self.member.remove_roles(role) 
                        cursor.execute("UPDATE users SET otpysk=otpysk -1 WHERE id=?", [self.member.id])
                        connection.commit()
                        
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                        return

    @disnake.ui.button(label="–°–Ω—è—Ç—å –æ—Ç–ø—É—Å–∫", style=ButtonStyle.gray, row=2)
    async def unrest(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –æ—Ç–ø—É—Å–∫–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))   
               
        else:
            if  cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET otpysk=otpysk -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –æ—Ç–ø—É—Å–∫ —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_OTPYSK)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –û—Ç–ø—É—Å–∫–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ö–æ–º—É —Å–Ω—è–ª–∏:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –æ—Ç–ø—É—Å–∫', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –°–Ω—è–ª–∏ –æ—Ç–ø—É—Å–∫:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        


    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å", style=ButtonStyle.blurple, row=3)
    async def creativerole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª—å—é** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=CreativeRole(self.client, self.inter, self.member))      

    @disnake.ui.button(label="–î–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.gray, row=3)
    async def staffban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤', description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –¥–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        if cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, **—É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è** –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
                    return
            cursor.execute("UPDATE users SET staffban=staffban +1 WHERE id=?", [self.member.id])
            channel = self.client.get_channel(LOG_STAFFBAN)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ü–æ–ª—É—á–∏–ª —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                value = f'„Éª{reason}',
                inline=True
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –í—ã **–¥–æ–±–∞–≤–∏–ª–∏** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}, –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))
    
    @disnake.ui.button(label="–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.gray, row=3)
    async def staffson(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))   
               
        else:
            if  cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET staffban=staffban -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–ª–∏** —á—Å —Å–æ—Å—Ç–∞–≤–∞ —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ö–æ–º—É —Å–Ω—è–ª–∏:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –°–Ω—è–ª–∏ —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –≤–µ—Ç–∫–∏", style=ButtonStyle.green, row=4)
    async def role(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –≤–µ—Ç–∫–∏', description=f'{self.inter.author.mention}, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –≤–µ—Ç–∫–∏ {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        await interaction.response.edit_message(embed=embed, view=Staff(self.inter, self.client, self.member))

    @disnake.ui.button(label="–ü—Ä–æ—Ñ–∏–ª—å –°–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.blurple, row=4)
    async def mprofile(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if interaction.guild.get_role(ADMIN) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
        
        elif interaction.guild.get_role(CURATOR) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ö—É—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ö—É—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            
        elif interaction.guild.get_role(MODER) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
        
            
        elif interaction.guild.get_role(HELPER) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ö–æ–Ω—Ç—Ä–æ–ª–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ö–æ–Ω—Ç—Ä–æ–ª```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            
        elif interaction.guild.get_role(SUPPORT) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –°–∞–ø–ø–æ—Ä—Ç–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–°–∞–ø–ø–æ—Ä—Ç```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))     
        else:         
            embed = disnake.Embed(title='–ü—Ä–æ—Ñ–∏–ª—å –°–æ—Å—Ç–∞–≤–∞', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤–µ—Ç–∫–µ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackAdmin(self.client, self.inter, self.member))    
            
    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=4)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        mutes = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        bans = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        
        rows = cursor.execute("SELECT date, punish_view, reason, given FROM history WHERE id = ?", [self.member.id])

        embeds = []
        if mutes+bans+warn == 0:
            embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, –Ω–µ –ø–æ–ª—É—á–∞–ª –Ω–∞—Ä—É—à–µ–Ω–∏–π!', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embeds.append(embed)

        else:
            for i, row in enumerate(rows):
                if i % 5 == 0:
                    embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ú—É—Ç–æ–≤: **{mutes}** –ë–∞–Ω–æ–≤: **{bans}** –ü—Ä–µ–¥–æ–≤: **{warn}**', color=0x2f3136)
                    embed.set_thumbnail(url=self.member.display_avatar)
                    embeds.append(embed)

                embed.add_field(
                    name=f'** **',
                    value=f'`{i+1}.` [<t:{row[0]}:f>] **{row[1]}** *–ü—Ä–∏—á–∏–Ω–∞:* {row[2]}\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: <@{row[3]}>',
                    inline=False
                )

        await interaction.response.edit_message(embed=embeds[0], view=Menu(self.client, self.inter, self.member, embeds))

    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∞", style=ButtonStyle.red, row=4)
    async def delete(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()


class Security(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)                
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –±–∞–Ω', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))   
        
        elif self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            
                            cursor.execute("UPDATE users SET bans=bans+1 WHERE id=?", [self.member.id])
                            cursor.execute("UPDATE users SET bans=bans +1 WHERE id=?", [interaction.author.id])
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['ban', self.member.id])
                            cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω', reason, interaction.author.id])
                            connection.commit()
    
                            
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –í—ã **–∑–∞–±–∞–Ω–∏–ª–∏** {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –ë–∞–Ω', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –í—ã–¥–∞–ª:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –¢–∏–ø:',
                                value = f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed = embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ tokame', color=0x2f3136)
                                
                                embed.add_field(
                                    name=f'> –í—ã–¥–∞–ª:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –¢–∏–ø:',
                                    value=f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )

                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass

                            await self.member.edit(roles=[])
                            role = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
                            await self.member.add_roles(role)
                            await asyncio.sleep(times)
                            await self.member.remove_roles(role)
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
                            connection.commit()

                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
            connection.commit()

            local_ban = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(local_ban)

            embed1 = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–±–∞–Ω', description=f'{interaction.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ **—Å–Ω—è–ª–∏** –±–∞–Ω —É {self.member.mention}!', color=0x2f3136)
            embed1.timestamp = datetime.datetime.now()
            embed1.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed1, view=BackSecurity(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –†–∞–∑–±–∞–Ω–∏—Ç—å', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –±–∞–Ω', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)                            
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –±–∞–Ω–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Back(self.client, self.inter, self.member))
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ú—É—Ç', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Mute(self.client, self.inter, self.member))


    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)
        chats = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
            
        elif chats in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
        
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –º—É—Ç–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))

   
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –∑–∞–º–µ—á–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        role = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} **—É–∂–µ –µ—Å—Ç—å** –∑–∞–º–µ—á–∞–Ω–∏–µ!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–∑–∞–º–µ—á–∞–Ω–∏–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                    return
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.add_roles(zames)
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –∑–∞–º–µ—á–∞–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            
            await asyncio.sleep(3600)
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.remove_roles(zames)    
        
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray)
    async def verifygender(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≥–µ–Ω–¥–µ—Ä–Ω—É—é —Ä–æ–ª—å** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=VerifySupport(self.client, self.inter, self.member))
                    
    @disnake.ui.button(label="–°–º–µ–Ω–∏—Ç—å –ø–æ–ª", style=ButtonStyle.gray)
    async def genderole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî C–º–µ–Ω–∏—Ç—å –ø–æ–ª', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–ø–æ–ª** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Gender(self.client, self.inter, self.member))                    
                    
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
       
        if  cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -2 WHERE id=?", [self.member.id])
            connection.commit()
            await self.member.edit(roles=[])
            ban_role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(ban_role)
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª **3** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –ø–æ–ª—É—á–∏–ª –±–∞–Ω.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
        
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [self.member.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', reason, interaction.author.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        return
                        

    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))  
                                
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id])
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id]) 
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –≤—ã–≥–æ–≤–æ—Ä", style=ButtonStyle.gray, row=2)
    async def vigovor(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –≤—ã–≥–æ–≤–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        
        if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET vigovor=vigovor -2 WHERE id=?", [self.member.id])
            connection.commit()
            curator = disnake.utils.get(self.inter.guild.roles, id=CURATOR)
            moderator = disnake.utils.get(self.inter.guild.roles, id=MODER)
            support = disnake.utils.get(self.inter.guild.roles, id=SUPPORT)
            broadcaster = disnake.utils.get(self.inter.guild.roles, id=BROADCASTER)
            eventer = disnake.utils.get(self.inter.guild.roles, id=EVENTER)
            creative = disnake.utils.get(self.inter.guild.roles, id=CREATIVE)
            closemaker = disnake.utils.get(self.inter.guild.roles, id=CLOSEMAKER)
            staff = disnake.utils.get(self.inter.guild.roles, id=STAFF_ROLE)
            await self.member.remove_roles(CURATOR)
            await self.member.remove_roles(moderator)
            await self.member.remove_roles(support)
            await self.member.remove_roles(broadcaster)
            await self.member.remove_roles(eventer)
            await self.member.remove_roles(staff)
            await self.member.remove_roles(closemaker)
            await self.member.remove_roles(creative)
            
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏ 3 –≤—ã–≥–æ–≤–æ—Ä** –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} –±—ã–ª —Å–Ω—è—Ç —Å —Ä–æ–ª–µ–π —Å–æ—Å—Ç–∞–≤–∞.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –í—ã–≥–æ–≤–æ—Ä/–°–Ω—è—Ç–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            try:
                embed = disnake.Embed(title='–í–∞—Å —Å–Ω—è–ª–∏ —É –≤–∞—Å 3 –≤—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                )
                embed.add_field(
                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                    value=f'**```{reason}```**',
                    inline=True
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)
            
            except disnake.Forbidden:
                pass

                    
            except UnboundLocalError or ValueError:
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–≤—ã–≥–æ–≤–æ—Ä–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–≤—ã–≥–æ–≤–æ—Ä–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            

                            cursor.execute("UPDATE users SET vigovor=vigovor +1 WHERE id=?", [self.member.id])
                            connection.commit()
    
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –≤—ã–≥–æ–≤–æ—Ä {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))                                                         
                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –í—ã–≥–æ–≤–æ—Ä', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed=embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                                embed.add_field(
                                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed_log.add_field(
                                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )
                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass

                            await asyncio.sleep(times)
                            cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                            connection.commit()
                            
                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞", style=ButtonStyle.gray, row=2)
    async def vigovors(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
                
        if cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤—ã–≥–æ–≤–æ—Ä–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))   
                            
        elif -1 > cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤—ã–≥–æ–≤–æ—Ä–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.send(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
               
        else:
            if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –≤—ã–≥–æ–≤–æ—Ä —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –í—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        
             
            if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
                cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –≤—ã–≥–æ–≤–æ—Ä —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –í—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)         

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –æ—Ç–ø—É—Å–∫", style=ButtonStyle.gray, row=2)
    async def rest(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –æ—Ç–ø—É—Å–∫', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))   
        
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤—ã–¥–∞—á–∏ **–æ—Ç–ø—É—Å–∫—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã–¥–∞–Ω–æ **–æ—Ç–ø—É—Å–∫** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ –¥–Ω—è—Ö: 1d/14d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        

                        cursor.execute("UPDATE users SET otpysk=otpysk +1 WHERE id=?", [self.member.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –æ—Ç–ø—É—Å–∫ {self.member.mention}, –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—É—Å–∫–∞ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))                                                         
                        channel = self.client.get_channel(LOG_OTPYSK)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –û—Ç–ø—É—Å–∫', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ü–æ–ª—É—á–∏–ª –æ—Ç–ø—É—Å–∫:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–ø—É—Å–∫–∞:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—É—Å–∫–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed=embed_log)
                        try:
                            embed = disnake.Embed(title='–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–ø—É—Å–∫', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass

                        role = disnake.utils.get(self.member.guild.roles, id=OTPYSK_ROLE) #—Ä–æ–ª—å –æ—Ç–ø—É—Å–∫–∞
                        await self.member.add_roles(role) 
                        
                        await asyncio.sleep(times)
                        await self.member.remove_roles(role) 
                        cursor.execute("UPDATE users SET otpysk=otpysk -1 WHERE id=?", [self.member.id])
                        connection.commit()
                        
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                        return

    @disnake.ui.button(label="–°–Ω—è—Ç—å –æ—Ç–ø—É—Å–∫", style=ButtonStyle.gray, row=2)
    async def unrest(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –æ—Ç–ø—É—Å–∫–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))   
               
        else:
            if  cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET otpysk=otpysk -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –æ—Ç–ø—É—Å–∫ —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_OTPYSK)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –û—Ç–ø—É—Å–∫–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ö–æ–º—É —Å–Ω—è–ª–∏:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –æ—Ç–ø—É—Å–∫', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –°–Ω—è–ª–∏ –æ—Ç–ø—É—Å–∫:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        


    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å", style=ButtonStyle.blurple, row=3)
    async def creativerole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª—å—é** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=CreativeRole(self.client, self.inter, self.member))      

    @disnake.ui.button(label="–î–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.gray, row=3)
    async def staffban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤', description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –¥–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        if cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, **—É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è** –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
                    return
            cursor.execute("UPDATE users SET staffban=staffban +1 WHERE id=?", [self.member.id])
            channel = self.client.get_channel(LOG_STAFFBAN)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ü–æ–ª—É—á–∏–ª —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                value = f'„Éª{reason}',
                inline=True
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –í—ã **–¥–æ–±–∞–≤–∏–ª–∏** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}, –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))
    
    @disnake.ui.button(label="–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.gray, row=3)
    async def staffson(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))   
               
        else:
            if  cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET staffban=staffban -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–ª–∏** —á—Å —Å–æ—Å—Ç–∞–≤–∞ —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ö–æ–º—É —Å–Ω—è–ª–∏:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –°–Ω—è–ª–∏ —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –≤–µ—Ç–∫–∏", style=ButtonStyle.green, row=4)
    async def role(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –≤–µ—Ç–∫–∏', description=f'{self.inter.author.mention}, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –≤–µ—Ç–∫–∏ {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        await interaction.response.edit_message(embed=embed, view=Staff(self.inter, self.client, self.member))

    @disnake.ui.button(label="–ü—Ä–æ—Ñ–∏–ª—å –°–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.blurple, row=4)
    async def mprofile(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if interaction.guild.get_role(ADMIN) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
        
        elif interaction.guild.get_role(CURATOR) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ö—É—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ö—É—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            
        elif interaction.guild.get_role(MODER) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
        
            
        elif interaction.guild.get_role(HELPER) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ö–æ–Ω—Ç—Ä–æ–ª–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ö–æ–Ω—Ç—Ä–æ–ª```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            
        elif interaction.guild.get_role(SUPPORT) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –°–∞–ø–ø–æ—Ä—Ç–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–°–∞–ø–ø–æ—Ä—Ç```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))     
        else:         
            embed = disnake.Embed(title='–ü—Ä–æ—Ñ–∏–ª—å –°–æ—Å—Ç–∞–≤–∞', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤–µ—Ç–∫–µ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackSecurity(self.client, self.inter, self.member))    
            
    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=4)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        mutes = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        bans = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        
        rows = cursor.execute("SELECT date, punish_view, reason, given FROM history WHERE id = ?", [self.member.id])

        embeds = []
        if mutes+bans+warn == 0:
            embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, –Ω–µ –ø–æ–ª—É—á–∞–ª –Ω–∞—Ä—É—à–µ–Ω–∏–π!', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embeds.append(embed)

        else:
            for i, row in enumerate(rows):
                if i % 5 == 0:
                    embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ú—É—Ç–æ–≤: **{mutes}** –ë–∞–Ω–æ–≤: **{bans}** –ü—Ä–µ–¥–æ–≤: **{warn}**', color=0x2f3136)
                    embed.set_thumbnail(url=self.member.display_avatar)
                    embeds.append(embed)

                embed.add_field(
                    name=f'** **',
                    value=f'`{i+1}.` [<t:{row[0]}:f>] **{row[1]}** *–ü—Ä–∏—á–∏–Ω–∞:* {row[2]}\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: <@{row[3]}>',
                    inline=False
                )

        await interaction.response.edit_message(embed=embeds[0], view=Menu(self.client, self.inter, self.member, embeds))

    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∞", style=ButtonStyle.red, row=4)
    async def delete(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()



class Curator(disnake.ui.View):
    def __init__(self, client, inter, member):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(label="–ó–∞–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def ban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)                
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –±–∞–Ω', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))  
        
        elif self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–±–∞–Ω–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            
                            cursor.execute("UPDATE users SET bans=bans+1 WHERE id=?", [self.member.id])
                            cursor.execute("UPDATE users SET bans=bans +1 WHERE id=?", [interaction.author.id])
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['ban', self.member.id])
                            cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω', reason, interaction.author.id])
                            connection.commit()
    
                            
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –í—ã **–∑–∞–±–∞–Ω–∏–ª–∏** {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))

                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –ë–∞–Ω', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –í—ã–¥–∞–ª:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –¢–∏–ø:',
                                value = f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed = embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ tokame', color=0x2f3136)
                                
                                embed.add_field(
                                    name=f'> –í—ã–¥–∞–ª:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –¢–∏–ø:',
                                    value=f'„Éª–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )

                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass

                            await self.member.edit(roles=[])
                            role = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
                            await self.member.add_roles(role)
                            await asyncio.sleep(times)
                            await self.member.remove_roles(role)
                            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
                            connection.commit()

                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ë–∞–Ω', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–†–∞–∑–±–∞–Ω–∏—Ç—å", style=ButtonStyle.gray)
    async def unban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            cursor.execute("UPDATE users SET local_ban=? WHERE id=?", ['unban', self.member.id])
            connection.commit()

            local_ban = disnake.utils.get(self.member.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(local_ban)

            embed1 = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–±–∞–Ω', description=f'{interaction.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ **—Å–Ω—è–ª–∏** –±–∞–Ω —É {self.member.mention}!', color=0x2f3136)
            embed1.timestamp = datetime.datetime.now()
            embed1.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed1, view=BackCurator(self.client, self.inter, self.member))
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –†–∞–∑–±–∞–Ω–∏—Ç—å', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –±–∞–Ω', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)                            
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –±–∞–Ω–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def mute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –ú—É—Ç', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ **–º—É—Ç–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Mute(self.client, self.inter, self.member))


    @disnake.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=ButtonStyle.gray)
    async def unmute(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        role = disnake.utils.get(self.inter.guild.roles, id=VOICE_MUTE)
        chats = disnake.utils.get(self.inter.guild.roles, id=TEXT_MUTE)
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** —Å–Ω—è—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
           
        elif role in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
            
        elif chats in self.member.roles:    
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –†–∞–∑–º—É—Ç', description=f'{interaction.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∏–¥ –º—É—Ç–∞** –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}!', color=0x2f3136)
            embed.timestamp = datetime.datetime.now()
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=Razmut(self.client, self.inter, self.member))
        
        else:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} **–Ω–µ –∏–º–µ–µ—Ç** –º—É—Ç–∞ ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))

   
    @disnake.ui.button(label="–ó–∞–º–µ—á–∞–Ω–∏–µ", style=ButtonStyle.gray)
    async def genders(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –∑–∞–º–µ—á–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        role = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
        if role in self.member.roles:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} **—É–∂–µ –µ—Å—Ç—å** –∑–∞–º–µ—á–∞–Ω–∏–µ!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–∑–∞–º–µ—á–∞–Ω–∏–µ** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                    return
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.add_roles(zames)
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏–µ', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –∑–∞–º–µ—á–∞–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            
            await asyncio.sleep(3600)
            zames = disnake.utils.get(self.inter.guild.roles, id=ROLE_ZAMEC)
            await self.member.remove_roles(zames)    

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å", style=ButtonStyle.blurple, row=3)
    async def creativerole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª—å—é** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=CreativeRole(self.client, self.inter, self.member))    
        
    @disnake.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", style=ButtonStyle.gray)
    async def verifygender(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–≥–µ–Ω–¥–µ—Ä–Ω—É—é —Ä–æ–ª—å** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=VerifySupport(self.client, self.inter, self.member))
                    
    @disnake.ui.button(label="–°–º–µ–Ω–∏—Ç—å –ø–æ–ª", style=ButtonStyle.gray)
    async def genderole(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ‚Äî C–º–µ–Ω–∏—Ç—å –ø–æ–ª', description=f'{interaction.author.mention} –í—ã–±–µ—Ä–∏—Ç–µ **–ø–æ–ª** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=Gender(self.client, self.inter, self.member))                    
                    
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray)
    async def warn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
       
        if  cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -2 WHERE id=?", [self.member.id])
            connection.commit()
            await self.member.edit(roles=[])
            ban_role = disnake.utils.get(self.inter.guild.roles, id=BAN_ROLE)
            await self.member.remove_roles(ban_role)
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª **3** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –ø–æ–ª—É—á–∏–ª –±–∞–Ω.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
        
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [interaction.author.id])
                        cursor.execute("UPDATE users SET warn=warn +1 WHERE id=?", [self.member.id])
                        cursor.execute("INSERT INTO history VALUES(?, ?, ?, ?, ?)", [self.member.id, int(time.time()), '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', reason, interaction.author.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        channel = self.client.get_channel(LOG_NAKAZANIA)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed = embed_log)
                        try:
                            embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        return
                        

    @disnake.ui.button(label="–°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=ButtonStyle.gray, row=1)
    async def unwarn(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))  
                                
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id])
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
        if cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET warn=warn -1 WHERE id=?", [self.member.id]) 
            connection.commit()
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed = embed_log)
            embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=0x2f3136)
            embed.add_field(
                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await self.member.send(embed=embed)        
            
    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –≤—ã–≥–æ–≤–æ—Ä", style=ButtonStyle.gray, row=2)
    async def vigovor(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤',
                description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –≤—ã–¥–∞—Ç—å –≤—ã–≥–æ–≤–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        
        if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
            cursor.execute("UPDATE users SET vigovor=vigovor -2 WHERE id=?", [self.member.id])
            connection.commit()
            curator = disnake.utils.get(self.inter.guild.roles, id=CURATOR)
            moderator = disnake.utils.get(self.inter.guild.roles, id=MODER)
            support = disnake.utils.get(self.inter.guild.roles, id=SUPPORT)
            broadcaster = disnake.utils.get(self.inter.guild.roles, id=BROADCASTER)
            eventer = disnake.utils.get(self.inter.guild.roles, id=EVENTER)
            creative = disnake.utils.get(self.inter.guild.roles, id=CREATIVE)
            closemaker = disnake.utils.get(self.inter.guild.roles, id=CLOSEMAKER)
            staff = disnake.utils.get(self.inter.guild.roles, id=STAFF_ROLE)
            await self.member.remove_roles(CURATOR)
            await self.member.remove_roles(moderator)
            await self.member.remove_roles(support)
            await self.member.remove_roles(broadcaster)
            await self.member.remove_roles(eventer)
            await self.member.remove_roles(staff)
            await self.member.remove_roles(closemaker)
            await self.member.remove_roles(creative)
            
            embed = disnake.Embed(title='–í—ã–¥–∞—á–∞ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏ 3 –≤—ã–≥–æ–≤–æ—Ä** –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} –±—ã–ª —Å–Ω—è—Ç —Å —Ä–æ–ª–µ–π —Å–æ—Å—Ç–∞–≤–∞.', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            channel = self.client.get_channel(LOG_NAKAZANIA)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –í—ã–≥–æ–≤–æ—Ä/–°–Ω—è—Ç–∏–µ', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            try:
                embed = disnake.Embed(title='–í–∞—Å —Å–Ω—è–ª–∏ —É –≤–∞—Å 3 –≤—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                )
                embed.add_field(
                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                    value=f'**```{reason}```**',
                    inline=True
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)
            
            except disnake.Forbidden:
                pass

                    
            except UnboundLocalError or ValueError:
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
        else:
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–≤—ã–≥–æ–≤–æ—Ä–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=None)

            def check(m: disnake.Message):
                return m.author == interaction.author and m.channel.id == interaction.channel.id 
            try:
                msg = await self.client.wait_for('message', check=check, timeout=30)
                await msg.delete()
                
            except asyncio.TimeoutError: 
                embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                return
            
            else:
                reason = msg.content

                if len(msg.content) > 35:
                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        return
                
                else:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è **–≤—ã–≥–æ–≤–æ—Ä–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                    embed.set_footer(text='–ü—Ä–∏–º–µ—Ä: 10s/10m/10h/10d')
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=None)

                    def check(m: disnake.Message):
                        return m.author == interaction.author and m.channel.id == interaction.channel.id 
                    try:
                        msg = await self.client.wait_for('message', check=check, timeout = 30)
                        await msg.delete()
                        
                    except asyncio.TimeoutError: 
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        return
                    
                    else:
                        try:
                            if 's' in msg.content:
                                i = msg.content.replace("s", "")
                                times = int(i)

                                a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                            if 'm' in msg.content:
                                i = msg.content.replace("m", "")
                                times = int(i)*60

                                a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                                
                            if 'h' in msg.content:
                                i = msg.content.replace("h", "")
                                times = int(i)*3600

                                a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                            if 'd' in msg.content:
                                i = msg.content.replace("d", "")
                                times = int(i)*86400

                                a = msg.content.replace("d", " –¥–Ω–µ–π")

                            

                            cursor.execute("UPDATE users SET vigovor=vigovor +1 WHERE id=?", [self.member.id])
                            connection.commit()
    
                            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –≤—ã–≥–æ–≤–æ—Ä {self.member.mention}, –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))                                                         
                            channel = self.client.get_channel(LOG_NAKAZANIA)                       
                            embed_log = disnake.Embed(
                                title = '–õ–æ–≥–∏ - –í—ã–≥–æ–≤–æ—Ä', color=0x2f3136
                            )
                            embed_log.add_field(
                                name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value = f'„Éª{a}',
                                inline=False
                            )
                            embed_log.add_field(
                                name = '> –ü—Ä–∏—á–∏–Ω–∞:',
                                value = f'„Éª{reason}',
                                inline=True
                            )
                            embed_log.set_thumbnail(url=interaction.author.display_avatar)
                            embed_log.timestamp = datetime.datetime.now()
                            await channel.send(embed=embed_log)
                            try:
                                embed = disnake.Embed(title='–í–∞–º –≤—ã–¥–∞–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                                embed.add_field(
                                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                                )
                                embed_log.add_field(
                                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}'
                                )
                                embed.add_field(
                                    name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                    value=f'```{a}```'
                                )
                                embed.add_field(
                                    name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                    value=f'**```{reason}```**',
                                    inline=True
                                )
                                embed.set_thumbnail(url=interaction.author.display_avatar)
                                embed.timestamp = datetime.datetime.now()
                                await self.member.send(embed=embed)

                            except disnake.Forbidden:
                                pass

                            await asyncio.sleep(times)
                            cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                            connection.commit()
                            
                        except UnboundLocalError or ValueError:
                            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≥–æ–≤–æ—Ä–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                            return
                        
    @disnake.ui.button(label="–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞", style=ButtonStyle.gray, row=2)
    async def vigovors(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
                
        if cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤—ã–≥–æ–≤–æ—Ä–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))   
                            
        elif -1 > cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤—ã–≥–æ–≤–æ—Ä–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.send(embed=embed, view=BackCurator(self.client, self.inter, self.member))
               
        else:
            if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –≤—ã–≥–æ–≤–æ—Ä —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –í—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        
             
            if  cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 2:
                cursor.execute("UPDATE users SET vigovor=vigovor -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –≤—ã–≥–æ–≤–æ—Ä —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –í—ã–≥–æ–≤–æ—Ä–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –≤—ã–≥–æ–≤–æ—Ä', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ù–∞—Ä—É—à–∏—Ç–µ–ª—å:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)         

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –æ—Ç–ø—É—Å–∫", style=ButtonStyle.gray, row=2)
    async def rest(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –æ—Ç–ø—É—Å–∫', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))   
        
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤—ã–¥–∞—á–∏ **–æ—Ç–ø—É—Å–∫—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                    return
            
            else:
                embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã–¥–∞–Ω–æ **–æ—Ç–ø—É—Å–∫** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
                embed.set_footer(text='–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ –¥–Ω—è—Ö: 1d/14d')
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.edit_original_message(embed=embed, view=None)

                def check(m: disnake.Message):
                    return m.author == interaction.author and m.channel.id == interaction.channel.id 
                try:
                    msg = await self.client.wait_for('message', check=check, timeout = 30)
                    await msg.delete()
                    
                except asyncio.TimeoutError: 
                    embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                    return
                
                else:
                    try:
                        if 's' in msg.content:
                            i = msg.content.replace("s", "")
                            times = int(i)

                            a = msg.content.replace("s", " —Å–µ–∫—É–Ω–¥")

                        if 'm' in msg.content:
                            i = msg.content.replace("m", "")
                            times = int(i)*60

                            a = msg.content.replace("m", " –º–∏–Ω—É—Ç")
                            
                        if 'h' in msg.content:
                            i = msg.content.replace("h", "")
                            times = int(i)*3600

                            a = msg.content.replace("h", " —á–∞—Å–æ–≤")

                        if 'd' in msg.content:
                            i = msg.content.replace("d", "")
                            times = int(i)*86400

                            a = msg.content.replace("d", " –¥–Ω–µ–π")

                        

                        cursor.execute("UPDATE users SET otpysk=otpysk +1 WHERE id=?", [self.member.id])
                        connection.commit()

                        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –í—ã **–≤—ã–¥–∞–ª–∏** –æ—Ç–ø—É—Å–∫ {self.member.mention}, –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—É—Å–∫–∞ **{reason}** –Ω–∞ **{a}**', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))                                                         
                        channel = self.client.get_channel(LOG_OTPYSK)                       
                        embed_log = disnake.Embed(
                            title = '–õ–æ–≥–∏ - –û—Ç–ø—É—Å–∫', color=0x2f3136
                        )
                        embed_log.add_field(
                            name = '> –ü–æ–ª—É—á–∏–ª –æ—Ç–ø—É—Å–∫:',
                            value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                            value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–ø—É—Å–∫–∞:',
                            value = f'„Éª{a}',
                            inline=False
                        )
                        embed_log.add_field(
                            name = '> –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—É—Å–∫–∞:',
                            value = f'„Éª{reason}',
                            inline=True
                        )
                        embed_log.set_thumbnail(url=interaction.author.display_avatar)
                        embed_log.timestamp = datetime.datetime.now()
                        await channel.send(embed=embed_log)
                        try:
                            embed = disnake.Embed(title='–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–ø—É—Å–∫', color=0x2f3136)
                            embed.add_field(
                                name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                                value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}'
                            )
                            embed.add_field(
                                name=f'> –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:',
                                value=f'```{a}```'
                            )
                            embed.add_field(
                                name=f'> –ü—Ä–∏—á–∏–Ω–∞:',
                                value=f'**```{reason}```**',
                                inline=True
                            )
                            embed.set_thumbnail(url=interaction.author.display_avatar)
                            embed.timestamp = datetime.datetime.now()
                            await self.member.send(embed=embed)

                        except disnake.Forbidden:
                            pass

                        role = disnake.utils.get(self.member.guild.roles, id=OTPYSK_ROLE) #—Ä–æ–ª—å –æ—Ç–ø—É—Å–∫–∞
                        await self.member.add_roles(role) 
                        
                        await asyncio.sleep(times)
                        await self.member.remove_roles(role) 
                        cursor.execute("UPDATE users SET otpysk=otpysk -1 WHERE id=?", [self.member.id])
                        connection.commit()
                        
                        
                    except UnboundLocalError or ValueError:
                        embed=disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–º', description=f'{interaction.author.mention}, –£–ø—Å... –≥–¥–µ —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', color=0x2f3136)
                        embed.set_thumbnail(url=interaction.author.display_avatar)
                        embed.timestamp = datetime.datetime.now()
                        await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                        return

    @disnake.ui.button(label="–°–Ω—è—Ç—å –æ—Ç–ø—É—Å–∫", style=ButtonStyle.gray, row=2)
    async def unrest(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{interaction.author.mention}, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –æ—Ç–ø—É—Å–∫–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))   
               
        else:
            if  cursor.execute("SELECT otpysk FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET otpysk=otpysk -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–°–Ω—è—Ç–∏–µ –æ—Ç–ø—É—Å–∫–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏** –æ—Ç–ø—É—Å–∫ —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –°–Ω—è—Ç–∏–µ –û—Ç–ø—É—Å–∫–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ö–æ–º—É —Å–Ω—è–ª–∏:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ –æ—Ç–ø—É—Å–∫', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –°–Ω—è–ª–∏ –æ—Ç–ø—É—Å–∫:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        

    @disnake.ui.button(label="–î–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.gray, row=3)
    async def staffban(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if self.member.top_role.position >= interaction.author.top_role.position:
            embed = disnake.Embed(title='–û—à–∏–±–∫–∞ –ü—Ä–∞–≤', description=f'{interaction.author.mention}, –≤—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –¥–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–≤—ã—à–µ –≤–∞—Å** –ø–æ —Ä–æ–ª–∏!', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        if cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, **—É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è** –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
        embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention} –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É **–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        await interaction.response.edit_message(embed=embed, view=None)

        def check(m: disnake.Message):
            return m.author == interaction.author and m.channel.id == interaction.channel.id 
        try:
            msg = await self.client.wait_for('message', check=check, timeout=30)
            await msg.delete()
            
        except asyncio.TimeoutError: 
            embed=disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –≤—ã—à–ª–æ', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
            return
        
        else:
            reason = msg.content

            if len(msg.content) > 35:
                    embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{self.member.mention}, **–ø—Ä–∏—á–∏–Ω–∞** –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤—ã—à–∞—Ç—å –±–æ–ª—å—à–µ **35** —Å–∏–º–≤–æ–ª–æ–≤', color=0x2f3136)
                    embed.set_thumbnail(url=interaction.author.display_avatar)
                    embed.timestamp = datetime.datetime.now()
                    await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
                    return
            cursor.execute("UPDATE users SET staffban=staffban +1 WHERE id=?", [self.member.id])
            channel = self.client.get_channel(LOG_STAFFBAN)                       
            embed_log = disnake.Embed(
                title = '–õ–æ–≥–∏ - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136
            )
            embed_log.add_field(
                name = '> –ü–æ–ª—É—á–∏–ª —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                inline=False
            )
            embed_log.add_field(
                name = '> –ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                value = f'„Éª{reason}',
                inline=True
            )
            embed_log.set_thumbnail(url=interaction.author.display_avatar)
            embed_log.timestamp = datetime.datetime.now()
            await channel.send(embed=embed_log)
            embed = disnake.Embed(title='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –í—ã **–¥–æ–±–∞–≤–∏–ª–∏** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention}, –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ **{reason}**', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.edit_original_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))
    
    @disnake.ui.button(label="–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.gray, row=3)
    async def staffson(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 0:
            embed = disnake.Embed(title='–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{interaction.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=disnake.Color.red())
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))   
               
        else:
            if  cursor.execute("SELECT staffban FROM users WHERE id = ?", [self.member.id]).fetchone()[0] == 1:
                cursor.execute("UPDATE users SET staffban=staffban -1 WHERE id=?", [self.member.id])
                connection.commit()
                embed = disnake.Embed(title='–£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', description=f'{self.inter.author.mention}, –í—ã **—É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–ª–∏** —á—Å —Å–æ—Å—Ç–∞–≤–∞ —Å {self.member.mention}', color=0x2f3136)
                embed.set_thumbnail(url=self.member.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
                channel = self.client.get_channel(LOG_NAKAZANIA)                       
                embed_log = disnake.Embed(
                    title = '–õ–æ–≥–∏ - –£–±—Ä–∞—Ç—å –∏–∑ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136
                )
                embed_log.add_field(
                    name = '> –ö–æ–º—É —Å–Ω—è–ª–∏:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value = f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.set_thumbnail(url=interaction.author.display_avatar)
                embed_log.timestamp = datetime.datetime.now()
                await channel.send(embed = embed_log)
                embed = disnake.Embed(title='–í–∞–º —Å–Ω—è–ª–∏ —á—Å —Å–æ—Å—Ç–∞–≤–∞', color=0x2f3136)
                embed.add_field(
                    name=f'> –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:',
                    value=f'„Éª{interaction.author.mention}\n„Éª{interaction.author}\n„Éª{interaction.author.id}',
                    inline=False
                )
                embed_log.add_field(
                    name = '> –°–Ω—è–ª–∏ —á—Å —Å–æ—Å—Ç–∞–≤–∞:',
                    value = f'„Éª{self.member.mention}\n„Éª{self.member}\n„Éª{self.member.id}',
                    inline=False
                )
                embed.set_thumbnail(url=interaction.author.display_avatar)
                embed.timestamp = datetime.datetime.now()
                await self.member.send(embed=embed)        

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –≤–µ—Ç–∫–∏", style=ButtonStyle.green, row=4)
    async def role(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        embed = disnake.Embed(title='–í—ã–¥–∞—Ç—å/–°–Ω—è—Ç—å —Ä–æ–ª—å –≤–µ—Ç–∫–∏', description=f'{self.inter.author.mention}, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –≤–µ—Ç–∫–∏ {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=interaction.author.display_avatar)
        await interaction.response.edit_message(embed=embed, view=Staff(self.inter, self.client, self.member))


    @disnake.ui.button(label="–ü—Ä–æ—Ñ–∏–ª—å –°–æ—Å—Ç–∞–≤–∞", style=ButtonStyle.blurple, row=4)
    async def mprofile(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if interaction.guild.get_role(ADMIN) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
        
        elif interaction.guild.get_role(CURATOR) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ö—É—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ö—É—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
            
        elif interaction.guild.get_role(MODER) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
        
            
        elif interaction.guild.get_role(HELPER) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –ö–æ–Ω—Ç—Ä–æ–ª–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–ö–æ–Ω—Ç—Ä–æ–ª```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))      
            
        elif interaction.guild.get_role(SUPPORT) in self.member.roles:
            mute = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            ban = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            veref = cursor.execute("SELECT verify FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            vigovors = cursor.execute("SELECT vigovor FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            author_online = cursor.execute("SELECT voice_time FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
            connection.commit

            embed = disnake.Embed(description=f'**–ü—Ä–æ—Ñ–∏–ª—å –°–∞–ø–ø–æ—Ä—Ç–∞ - {self.member}**',color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            
            embed.add_field(
                name=f'> –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                value=f'```{author_online // 3600} —á. {(author_online % 3600) // 60} –º–∏–Ω.```',
                inline=False
                )
            
            embed.add_field(
                name=f'> –í—ã–≥–æ–≤–æ—Ä—ã',
                value=f'```{vigovors}/3```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –º—É—Ç–æ–≤',
                value=f'```{mute}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ',
                value=f'```{veref}```',
                inline=True
                )
            embed.add_field(
                name=f'> –ì—Ä—É–ø–ø–∞',
                value=f'```–°–∞–ø–ø–æ—Ä—Ç```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –≤–∞—Ä–Ω–æ–≤',
                value=f'```{warn}```',
                inline=True
                )
            embed.add_field(
                name=f'> –í—ã–¥–∞–Ω–æ –±–∞–Ω–æ–≤',
                value=f'```{ban}```',
                inline=True
                )
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))         
        else:         
            embed = disnake.Embed(title='–ü—Ä–æ—Ñ–∏–ª—å –°–æ—Å—Ç–∞–≤–∞', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤–µ—Ç–∫–µ, –∏–ª–∏ –∂–µ —É –Ω–µ–≥–æ –Ω–µ—Ç —Å—Ç–∞—Ñ—Ñ –ø—Ä–æ—Ñ–∏–ª—è –≤–µ—Ç–∫–∏', color=0x2f3136)
            embed.set_thumbnail(url=interaction.author.display_avatar)
            await interaction.response.edit_message(embed=embed, view=BackCurator(self.client, self.inter, self.member))    
 
    @disnake.ui.button(label="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", style=ButtonStyle.blurple, row=4)
    async def history(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        warn = cursor.execute("SELECT warn FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        mutes = cursor.execute("SELECT mutes FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        bans = cursor.execute("SELECT bans FROM users WHERE id = ?", [self.member.id]).fetchone()[0]
        
        rows = cursor.execute("SELECT date, punish_view, reason, given FROM history WHERE id = ?", [self.member.id])

        embeds = []
        if mutes+bans+warn == 0:
            embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.member.mention}, –Ω–µ –ø–æ–ª—É—á–∞–ª –Ω–∞—Ä—É—à–µ–Ω–∏–π!', color=0x2f3136)
            embed.set_thumbnail(url=self.member.display_avatar)
            embeds.append(embed)

        else:
            for i, row in enumerate(rows):
                if i % 5 == 0:
                    embed = disnake.Embed(title=f'–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Äî {self.member}', description=f'–ú—É—Ç–æ–≤: **{mutes}** –ë–∞–Ω–æ–≤: **{bans}** –ü—Ä–µ–¥–æ–≤: **{warn}**', color=0x2f3136)
                    embed.set_thumbnail(url=self.member.display_avatar)
                    embeds.append(embed)

                embed.add_field(
                    name=f'** **',
                    value=f'`{i+1}.` [<t:{row[0]}:f>] **{row[1]}** *–ü—Ä–∏—á–∏–Ω–∞:* {row[2]}\nModerator–∞—Ç–æ—Ä: <@{row[3]}>',
                    inline=False
                )

        await interaction.response.edit_message(embed=embeds[0], view=Menu(self.client, self.inter, self.member, embeds))    
    
    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∞", style=ButtonStyle.red, row=4)
    async def delete(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        await interaction.response.edit_message()
        await interaction.delete_original_message()


class Menu(disnake.ui.View):
    def __init__(self, client, inter, member, embeds: List[disnake.Embed]):
        super().__init__(timeout=None)
        self.client = client
        self.inter = inter
        self.member = member

        self.embeds = embeds
        self.embed_count = 0

        self.prev_page.disabled = True

        if len(self.embeds) == 1:
            self.next_page.disabled = True

        for i, embed in enumerate(self.embeds):
            embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {i + 1}/{len(self.embeds)}")

    async def interaction_check(self, interaction):
        if interaction.user == self.inter.author:
            return True
        else:
            await interaction.response.edit_message()

    @disnake.ui.button(emoji="‚óÄ", style=disnake.ButtonStyle.gray)
    async def prev_page(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        self.embed_count -= 1
        embed = self.embeds[self.embed_count]

        self.next_page.disabled = False

        if self.embed_count == 0:
            self.prev_page.disabled = True
        await interaction.response.edit_message(embed=embed, view=self)

    @disnake.ui.button(label="–ù–∞–∑–∞–¥", style=ButtonStyle.blurple)
    async def back(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        if interaction.guild.get_role(ADMIN) in interaction.author.roles: #—Ä–æ–ª—å admin
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Admin(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(CURATOR) in interaction.author.roles: #—Ä–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Curator(self.client, self.inter, self.member))       
            return
        
        elif interaction.guild.get_role(HELPER) in interaction.author.roles: #—Ä–æ–ª—å control
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Control(self.client, self.inter, self.member))
            return
        
        elif interaction.guild.get_role(MODER) in interaction.author.roles: #—Ä–æ–ª—å modera
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{interaction.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}!', color=0x2f3136)
            embed.set_thumbnail(url=self.inter.author.display_avatar)
            embed.timestamp = datetime.datetime.now()
            await interaction.response.edit_message(embed=embed, view=Moderations(self.client, self.inter, self.member))
            return

    @disnake.ui.button(emoji="‚ñ∂", style=disnake.ButtonStyle.gray)
    async def next_page(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        self.embed_count += 1
        embed = self.embeds[self.embed_count]

        self.prev_page.disabled = False
        
        if self.embed_count == len(self.embeds) - 1:
            self.next_page.disabled = True

        await interaction.response.edit_message(embed=embed, view=self)




class Action(commands.Cog):
    
    def __init__(self, client):
        self.client = client
        self.inter = iter
            
    @commands.slash_command(name='action', description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    @commands.has_any_role(ADMIN, CURATOR, MODER, HELPER, SUPPORT, CREATIVE, SECURITY)
    async def action(self, inter, member: disnake.Member = commands.Param(name="–ø–æ–ª—å–∑–æ–≤a—Ç–µ–ª—å")):
        self.member = member
        embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{inter.author.mention} **–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** —Å {self.member.mention}', color=0x2f3136)
        embed.set_thumbnail(url=inter.author.display_avatar)
        embed.timestamp = datetime.datetime.now()
        if member == inter.author:
            embed = disnake.Embed(
                title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', description=f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å** —Å **—Å–∞–º–∏–º —Å–æ–±–æ–π**', color=0x2f3136)
            embed.set_thumbnail(url=inter.author.display_avatar)
            await inter.send(embed=embed, ephemeral=True)

        elif  inter.guild.get_role(ADMIN) in inter.author.roles: #ADMIN
            await inter.send(embed=embed, view=Admin(self.client, inter, member))
            
        elif inter.guild.get_role(SECURITY) in inter.author.roles: #SECURITY
            await inter.send(embed=embed, view=Security(self.client, inter, member))
                
        elif inter.guild.get_role(CURATOR) in inter.author.roles: # CURATOR
            await inter.send(embed=embed, view=Curator(self.client, inter, member))
        
        elif inter.guild.get_role(MODER) in inter.author.roles: #MODER
            await inter.send(embed=embed, view=Moderations(self.client, inter, member))    
        
        elif inter.guild.get_role(HELPER) in inter.author.roles: #CONTROL
            await inter.send(embed=embed, view=Control(self.client, inter, member))
                
        elif inter.guild.get_role(SUPPORT) in inter.author.roles: #SUPPORT
            await inter.send(embed=embed, view=Support(self.client, inter, member))    
        
        elif inter.guild.get_role(CREATIVE) in inter.author.roles: #Creative
            await inter.send(embed=embed, view=Creative(self.client, inter, member))
    

    
def setup(client):
    client.add_cog(Action(client))